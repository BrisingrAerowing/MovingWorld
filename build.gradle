buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype-snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

// Apply plugin
apply plugin: 'forge'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

version = "1.8-ALPHA-0"
group = "darkevilmac.movingworld" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "movingworld"

minecraft {
    version = "1.8-11.14.2.1427"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20150602"
}

// Mixins
ext {
    mixinSrg = new File(project.buildDir, 'tmp/mixins/mixins.srg')
    mixinRefMap = new File(project.buildDir, "tmp/mixins/mixins.crystal.refmap.json")
}

// Repositories
repositories {
	mavenCentral()
    maven {
		url 'http://repo.spongepowered.org/maven'
	}
	maven {
		url 'https://oss.sonatype.org/content/groups/public'
	}
}

dependencies {
	compile 'org.spongepowered:mixin:0.4.4-SNAPSHOT'
}

// Jar shading and packaging configuration
jar {
	from project.mixinRefMap

	manifest {
		attributes(
			'FMLCorePlugin': 'darkevilmac.movingworld.asm.coremod.MovingWorldCoreMod',
			'FMLAT': 'MovingWorld_at.cfg'
		)
	}
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", minecraft.version

    // Replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// Replace the properties
		expand([
			'version': project.version,
			'mcversion': minecraft.version
		])
	}

	// Copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

// Compile options
compileJava {
    options.compilerArgs += [
            '-Xlint:-processing',
            "-AoutSrgFile=${project.mixinSrg.canonicalPath}",
            "-AoutRefMapFile=${project.mixinRefMap.canonicalPath}",
            "-AreobfSrgFile=${project.file('build/srgs/mcp-srg.srg').canonicalPath}"
    ]
}

// Copy the current srgs to the build dir so the user doesn't have to go hunting for them
task copySrgs(type: Copy, dependsOn: 'genSrgs') {
    from plugins.getPlugin("forge").delayedFile("{SRG_DIR}")

    include '**/*.srg'
    into 'build/srgs'
}

setupDecompWorkspace.dependsOn copySrgs
setupDevWorkspace.dependsOn copySrgs
compileJava.dependsOn copySrgs

// Configure reobfuscation for mixins
reobf.doFirst {
    if (project.mixinSrg.exists()) {
        addExtraSrgFile project.mixinSrg
    }
}